server:
  tomcat:
    threads:
      max: 1000  # Макс потоков обработки
      min-spare: 100  # Минимальное количество рабочих потоков
    accept-count: 1000  # Макс длина очереди входящих соединений
    connection-timeout: 5000  # Таймаут соединения (мс)
spring:
  data:
    redis:
      host: redis
      port: 6379

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 100  # Рекомендуется 100-200 для высоконагруженных систем
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      pool-name: SpringBootHikariCP


    init:
      mode: always
      schema-locations: classpath:schema.sql  # Explicit path
      platform: postgresql

  flyway:
    enabled: false

jwt:
  secret: ${JWT_SECRET}
  expirationMs: 1210000000
logging:
  level:
    #    org.springframework.data.jdbc: debug
    #    org.springframework.jdbc: debug
    #    org.springframework.security: trace
    org.springframework.data.redis: trace
springdoc:
  swagger-ui:
    path: /swagger-ui
  api-docs:
    path: /api-docs
encryption:
  key: ${ENCRYPTION_KEY}
  algorithm: AES
  admin: ${ADMIN_KEY}
